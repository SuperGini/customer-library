/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */
// https://docs.gradle.org/current/samples/sample_building_java_libraries.html -> how to create a library
// https://projectlombok.org/setup/gradle
// https://plugins.gradle.org/plugin/io.freefair.lombok -> so gradle will generate getters and setters using lombok
//  in this case we dont need a dependency but just a plugin that will do everything for us
plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id "io.freefair.lombok" version "6.6.1"
    id 'maven-publish'
}

version = '1.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/SuperGini/customer-library"
            credentials {
                username = project.findProperty("user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("token") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            from components.java
        }

    }

}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.8.1')
        }
    }
}

java {
    withSourcesJar()
}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}



